name: CI CD Pipeline

#Triggers the workflow on push and pull reques, only for "main" branch
on:
  push:
    branches: [ main ] 
  pull_request:
    branches: [ main ]
  #Allows you to manually trigger a workflow run 
  workflow_dispatch:

jobs:
  test:

    #Integrate HTML validation into your CI/CD pipeline. You can use tools like HTMLHint (which is available as an NPM package) to 
    #automate checking your HTML for syntax errors and best practices.
    html-lint:
      runs-on: ubuntu-latest
      steps:
      #Check out the repository
      - uses: actions/checkout@v2

      #Install HTMLHint to validate HTML files
      - name: Install HTMLHint
        run: npm install htmlhint
      
      #Run HTMLHint to lint HTML files
      - name: Run HTMLHint
        run:  npx htmlhint '**/*.html'
        #The npx command is used to run binaries from the node_modules/.bin directory, making sure that the locally installed 
        #versions of htmlhint and stylelint are executed.

    css-lint:
      runs-on: ubuntu-latest
      steps:
      # Check out the repository
      - uses: actions/checkout@v2

      # Install Stylelint to lint CSS files
      - name: Install Stylelint
        run: npm install stylelint

      # Run Stylelint to lint CSS files
      - name: Run Stylelint
        run: npx stylelint '**/*.css'
      
    javascript-selenium:
      runs-on: ubuntu-latest
      services:
        selenium:
          image: selenium/standalone-chrome
          ports:
            - 4444:4444
      steps:
      # Check out the repository
      - uses: actions/checkout@v2

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Install dependencies required for Selenium tests
      - name: Install Dependencies
        run: npm install selenium-webdriver jest

      # Run Selenium tests using Jest
      - name: Run Selenium Tests
        run: npx jest '**/*.test.js'

  deploy:
    html-lint:
    # Job to deploy the project after successful linting
    runs-on: ubuntu-latest
    needs: test  # Ensures that this job only runs if the 'test' job succeeds
    
    steps:
    # Step 1: Check out the repository again
    - uses: actions/checkout@v2

    # Step 2: Deploy to Netlify (example deployment)
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v1.1
      with:
        publish-dir: ./public
        production-deploy: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}


    
